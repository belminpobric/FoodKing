// <auto-generated />
using System;
using FoodKing.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodKing.Services.Migrations
{
    [DbContext(typeof(FoodKingContext))]
    [Migration("20230420152613_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodKing.Services.Database.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lastName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phoneNumber");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC07BAC084EB");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.DailyMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__DailyMen__3214EC07286D7484");

                    b.ToTable("DailyMenu", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Menu__3214EC07595D505B");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.MenuHasProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menuId");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.HasKey("Id")
                        .HasName("PK__MenuHasP__3214EC07CEED5881");

                    b.HasIndex("MenuId");

                    b.HasIndex("ProductId");

                    b.ToTable("MenuHasProduct", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsAccepted")
                        .HasColumnType("bit")
                        .HasColumnName("isAccepted");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("PK__Order__3214EC07C862C4AB");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("details");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3214EC079853F2FB");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.OrderHasOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderDetailId")
                        .HasColumnType("int")
                        .HasColumnName("orderDetailId");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.HasKey("Id")
                        .HasName("PK__OrderHas__3214EC070C52C7AB");

                    b.HasIndex("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderHasOrderDetail", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.PaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("orderNumber");

                    b.HasKey("Id")
                        .HasName("PK__PaymentD__3214EC0736A945DA");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("FoodKing.Services.Database.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Products__3214EC075A0A9E2A");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC07BE828660");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lastName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phoneNumber");

                    b.HasKey("Id")
                        .HasName("PK__Staff__3214EC07085DBF73");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("FoodKing.Services.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("currentAddress");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userName");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07D5F60FCE");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.UserHasRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__UserHasR__3214EC07216D1EEB");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHasRole", (string)null);
                });

            modelBuilder.Entity("FoodKing.Services.Database.MenuHasProduct", b =>
                {
                    b.HasOne("FoodKing.Services.Database.Menu", "Menu")
                        .WithMany("MenuHasProducts")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("MHP_Menu_FK");

                    b.HasOne("FoodKing.Services.Database.Product", "Product")
                        .WithMany("MenuHasProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("MHP_Products_FK");

                    b.Navigation("Menu");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FoodKing.Services.Database.OrderDetail", b =>
                {
                    b.HasOne("FoodKing.Services.Database.Customer", "Customer")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Order_Customer");

                    b.HasOne("FoodKing.Services.Database.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("Order_Product_FK");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FoodKing.Services.Database.OrderHasOrderDetail", b =>
                {
                    b.HasOne("FoodKing.Services.Database.OrderDetail", "OrderDetail")
                        .WithMany("OrderHasOrderDetails")
                        .HasForeignKey("OrderDetailId")
                        .HasConstraintName("FK_OrderDetail_OHOD");

                    b.HasOne("FoodKing.Services.Database.Order", "Order")
                        .WithMany("OrderHasOrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Order_OHOD");

                    b.Navigation("Order");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("FoodKing.Services.Database.UserHasRole", b =>
                {
                    b.HasOne("FoodKing.Services.Database.Role", "Role")
                        .WithMany("UserHasRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_UHR_Role");

                    b.HasOne("FoodKing.Services.Database.User", "User")
                        .WithMany("UserHasRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UHR_User");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodKing.Services.Database.Customer", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FoodKing.Services.Database.Menu", b =>
                {
                    b.Navigation("MenuHasProducts");
                });

            modelBuilder.Entity("FoodKing.Services.Database.Order", b =>
                {
                    b.Navigation("OrderHasOrderDetails");
                });

            modelBuilder.Entity("FoodKing.Services.Database.OrderDetail", b =>
                {
                    b.Navigation("OrderHasOrderDetails");
                });

            modelBuilder.Entity("FoodKing.Services.Database.Product", b =>
                {
                    b.Navigation("MenuHasProducts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FoodKing.Services.Database.Role", b =>
                {
                    b.Navigation("UserHasRoles");
                });

            modelBuilder.Entity("FoodKing.Services.Database.User", b =>
                {
                    b.Navigation("UserHasRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
